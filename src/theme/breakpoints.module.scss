// Define breakpoints
$breakpoints: (
  de: 0,
  // default
  xs: 320px,
  // mobiles
  sm: 480px,
  // iPads & tablets
  md: 768px,
  // laptops
  lg: 1024px,
  // desktops
  xl: 1200px,
  // extra large screens & TV
);

:export {
  de: map_get($breakpoints, de);
  xs: map_get($breakpoints, xs);
  sm: map_get($breakpoints, sm);
  md: map_get($breakpoints, md);
  lg: map_get($breakpoints, lg);
  xl: map_get($breakpoints, xl);
}

// Simple media query mixin
@mixin respond-to($breakpoint) {
  @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
    @content;
  }
}

// Expose breakpoints
body::after {
  position: absolute;
  left: -1337px;
  visibility: hidden;
  user-select: none;
  pointer-events: none;
  opacity: 0;
  font-size: 0;
  z-index: -1;

  @each $breakpoint-key, $breakpoint-value in $breakpoints {
    @if ($breakpoint-key == 'de') {
      content: 'de';
    } @else {
      @include respond-to($breakpoint-key) {
        content: '#{$breakpoint-key}';
      }
    }
  }
}
